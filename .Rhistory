# This script
# (1) reads questionnaire data exported from LimeSurvey and PsyToolkit
# (2) Fixes Issues with VP ID assignment
# (3) Creates project-specific data files in the environment as well as on disk
# clean up R environment
rm(list=ls())
cat("\014")
# install packages
if(!require("dplyr")){install.packages("dplyr")};library(dplyr)
if(!require("tidyr")){install.packages("tidyr")};library(tidyr)
if(!require("writexl")){install.packages("writexl")};library(tidyr)
## Set working directory -------------------------------------------------------
whoami<- Sys.info()[[4]]; print(whoami)
# if you are not in this list add your computer here
switch(whoami,
"KOPSY-D-033080" = {name <- "K:/vol2011/bba3488/";
path <- "FOR/"},
"UN-LAP-015977" = {name <- dirname(rstudioapi::getSourceEditorContext()$path);
}
)
setwd(name);
in_path = file.path("raw_data");
out_path = file.path("01_project_data");
survey_out_path = file.path(out_path, "survey_data");
function_path = file.path("functions");
psytool_path = file.path("raw_data", "psytoolkit");
cogtest_out_path = file.path(out_path, "experiment_data");
## Source required functions --------------------
source(file.path(function_path, "separate_by_project.R"))
source(file.path(function_path, "separate_by_project_cog.R"))
source(file.path(function_path, "remove_test_rows.R"))
source(file.path(function_path, "copy_psytool_files.R"))
## Backbone surveys ------------------------------------------------------------
#file_adults <-"results_adults_07042025.csv" # SW: not sure why this ID, the survey has a different ID
file_adults <- "results-survey564757.csv"
file_adolescents <- "results-survey585676.csv"
file_children <- "results-survey798916.csv"
# Questionnaires
dat_adults <- read.csv(file.path(name,in_path, file_adults))
dat_adolescents <- read.csv(file.path(name,in_path, file_adolescents))
dat_children <- read.csv(file.path(name,in_path, file_children))
names(dat_adults)
str(dat_adults)
list(str(dat_adults))
colnames(dat_adults))
colnames(dat_adults)
cat(colnames(dat_adults))
colnames(dat_adults)
cat(colnames(dat_adults), sep = "\n")
length(colnames(dat_adults))
dat_adults <- read.csv(file.path(name,in_path, file_adults), sep = ";")
dat_adolescents <- read.csv(file.path(name,in_path, file_adolescents), sep = ";")
dat_children <- read.csv(file.path(name,in_path, file_children), sep = ";")
colnames(dat_adults)
colnames(dat_adults)
# Which columns are completely NA?
empty_cols <- sapply(dat_adults, function(x) all(is.na(x)))
# Names of such columns
names(empty_cols[empty_cols])
